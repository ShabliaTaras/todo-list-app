{"version":3,"sources":["Todo.js","TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todos","handleTodo","removeTodo","className","complete","onClick","id","todo","TodoForm","addTodo","useState","userInput","setuserInput","onSubmit","e","preventDefault","value","type","placeholder","onChange","currentTarget","App","setTodos","filter","map","length","newItem","uuid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAeeA,EAfF,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACjC,OACE,sBAAKC,UAAU,YAAf,UACE,qBACEA,UAAWH,EAAMI,SAAW,mBAAqB,YACjDC,QAAS,kBAAMJ,EAAWD,EAAMM,KAFlC,SAIGN,EAAMO,OAET,qBAAKJ,UAAU,cAAcE,QAAS,kBAAMH,EAAWF,EAAMM,KAA7D,iBAP8BN,EAAMM,KCwB3BE,EAxBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAWA,OACE,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KAOb,UACE,uBACEI,MAAOL,EACPM,KAAK,OACLC,YAAY,8FACZC,SAVe,SAACL,GACpBF,EAAaE,EAAEM,cAAcJ,UAW3B,0F,gBCwBSK,MAzCf,WACE,MAA0BX,mBAAS,IAAnC,mBAAOV,EAAP,KAAcsB,EAAd,KAWMpB,EAAa,SAACI,GAClBgB,EAAS,YAAItB,EAAMuB,QAAO,SAAChB,GAAD,OAAUA,EAAKD,KAAOA,QAE5CL,EAAa,SAACK,GAClBgB,EAAS,YACJtB,EAAMwB,KAAI,SAACjB,GAAD,OACXA,EAAKD,KAAOA,EAAZ,2BAAsBC,GAAtB,IAA4BH,UAAWG,EAAKH,WAA5C,eAA8DG,SAIpE,OACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,qIAAwBH,EAAMyB,YAEhC,cAAC,EAAD,CAAUhB,QAzBE,SAACE,GACf,GAAIA,EAAW,CACb,IAAMe,EAAU,CACdpB,GAAIqB,MACJpB,KAAMI,EACNP,UAAU,GAEZkB,EAAS,GAAD,mBAAKtB,GAAL,CAAY0B,SAmBnB1B,EAAMwB,KAAI,SAACxB,GACV,OACE,cAAC,EAAD,CACEE,WAAYA,EACZD,WAAYA,EACZD,MAAOA,GACF2B,YC3BFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd777446.chunk.js","sourcesContent":["const Todo = ({ todos, handleTodo, removeTodo }) => {\n  return (\n    <div className=\"item-todo\" key={todos.id}>\n      <div\n        className={todos.complete ? \"item-text strike\" : \"item-text\"}\n        onClick={() => handleTodo(todos.id)}\n      >\n        {todos.todo}\n      </div>\n      <div className=\"item-delete\" onClick={() => removeTodo(todos.id)}>\n        X\n      </div>\n    </div>\n  );\n};\nexport default Todo;\n","import { useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [userInput, setuserInput] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo(userInput);\n    setuserInput(\"\");\n  };\n  const handleChange = (e) => {\n    setuserInput(e.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={userInput}\n        type=\"text\"\n        placeholder=\"Введіть завдання\"\n        onChange={handleChange}\n      />\n      <button>Зберегти</button>\n    </form>\n  );\n};\nexport default TodoForm;\n","import { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport uuid from \"react-uuid\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const addTodo = (userInput) => {\n    if (userInput) {\n      const newItem = {\n        id: uuid(),\n        todo: userInput,\n        complete: false,\n      };\n      setTodos([...todos, newItem]);\n    }\n  };\n  const removeTodo = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)]);\n  };\n  const handleTodo = (id) => {\n    setTodos([\n      ...todos.map((todo) =>\n        todo.id === id ? { ...todo, complete: !todo.complete } : { ...todo }\n      ),\n    ]);\n  };\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Кількість завдань: {todos.length}</h1>\n      </header>\n      <TodoForm addTodo={addTodo} />\n      {todos.map((todos) => {\n        return (\n          <Todo\n            removeTodo={removeTodo}\n            handleTodo={handleTodo}\n            todos={todos}\n            key={uuid}\n          />\n        );\n      })}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}